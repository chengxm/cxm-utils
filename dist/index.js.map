{"version":3,"file":"index.js","sources":["../src/deepclone.ts"],"sourcesContent":["/**\n * 深拷贝\n * @param obj 需要深拷贝的对象\n * @returns\n */\nconst deepClone = (obj: Object) => {\n  // 不是引用类型或者是null的话直接返回\n  if (typeof obj !== \"object\" || typeof obj == null) {\n    return obj;\n  }\n  // 初始化结果\n  let result: object;\n  if (obj instanceof Array) {\n    result = [];\n  } else {\n    result = {};\n  }\n\n  for (let key in obj) {\n    // 保证不是原型上的属性\n    if (obj.hasOwnProperty(key)) {\n      // 递归调用\n      result[key] = deepClone(obj[key]);\n    }\n  }\n  return result;\n};\n\nexport default deepClone;\n\n"],"names":[],"mappings":";;;;;;EAAA;;;;EAIG;AACG,MAAA,SAAS,GAAG,UAAC,GAAW,EAAA;;MAE5B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE;EACjD,QAAA,OAAO,GAAG,CAAC;EACZ,KAAA;;EAED,IAAA,IAAI,MAAc,CAAC;MACnB,IAAI,GAAG,YAAY,KAAK,EAAE;UACxB,MAAM,GAAG,EAAE,CAAC;EACb,KAAA;EAAM,SAAA;UACL,MAAM,GAAG,EAAE,CAAC;EACb,KAAA;EAED,IAAA,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;;EAEnB,QAAA,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;;cAE3B,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACnC,SAAA;EACF,KAAA;EACD,IAAA,OAAO,MAAM,CAAC;EAChB;;;;;;;;;;"}